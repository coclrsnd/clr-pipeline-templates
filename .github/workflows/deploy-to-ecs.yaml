name: Deploy to ECS

on:
  workflow_call:
    inputs:
      docker-tag:
        required: true
        type: string
      service-name:
        required: true
        type: string
      working-directory:
        required: true
        type: string
    secrets:
      AWS_REGION:
        required: true
      AWS_ECR_REPOSITORY:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      ECS_CLUSTER_NAME:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    name: Deploy in ECS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}  # Set the working directory globally

    steps:
      # Step 1: Check out the code
      - uses: actions/checkout@v4

      # Step 2: Set up AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Get the current ECS task definition
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          service: ${{ inputs.service-name }}
          task-definition: ecs-task-definition.json
          container-name: ${{ inputs.service-name }}
          image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}:${{ inputs.docker-tag }}
