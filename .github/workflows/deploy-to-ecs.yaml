name: Deploy to ECS

on:
  workflow_call:
    inputs:
      docker-tag:
        required: true
        type: string
      service-name:
        required: true
        type: string
      working-directory:
        required: true
        type: string
    secrets:
      AWS_REGION:
        required: true
      AWS_ECR_REPOSITORY:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      ECS_CLUSTER_NAME:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    name: Deploy in ECS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}  # Set the working directory globally

    steps:
      # Step 1: Check out the code
      - uses: actions/checkout@v4

      # Step 2: Set up AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Get the current ECS task definition
      - name: Get current ECS Task Definition
        id: ecs-task-def
        run: |
          ecs_task_definition=$(aws ecs describe-task-definition --task-definition loanapi --region ${{ secrets.AWS_REGION }} --query 'taskDefinition' --output json)
          encoded_task_definition=$(echo "$ecs_task_definition" | base64)
          echo "ecs_task_definition=$encoded_task_definition"

      # Step 4: Modify task definition with new Docker image tag
      - name: Update ECS Task Definition with new image
        run: |
          # Modify the ECS task definition's container image with the new Docker tag
          updated_task_definition=$(echo "$ecs_task_definition" | jq --arg image "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR_REPOSITORY:${{ inputs.docker-tag }}" \
            '.containerDefinitions[0].image = $image')
            
            # Register the new ECS task definition
            new_task_definition=$(echo "$updated_task_definition" | aws ecs register-task-definition \
              --family loanapi \
              --container-definitions file:///dev/stdin \
              --query 'taskDefinition.taskDefinitionArn' --output text)
              
              echo "New task definition ARN: $new_task_definition"
              echo "new_task_definition=$new_task_definition"

      # Step 5: Update ECS Service with the new task definition
      - name: Update ECS Service
        run: |
          # Update the ECS service with the new task definition
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ inputs.service-name }} --force-new-deployment --task-definition ${{ env.new_task_definition }}

      # Step 6: Wait for ECS service to stabilize
      - name: Wait for ECS service to stabilize
        run: |
          # Wait for the ECS service to stabilize
          aws ecs wait services-stable --cluster ${{ secrets.ECS_CLUSTER_NAME }} --services ${{ inputs.service-name }}
